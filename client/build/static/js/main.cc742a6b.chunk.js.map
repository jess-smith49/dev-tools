{"version":3,"sources":["components/Testimonials/index.js","utils/auth.js","components/Header/index.js","assets/images/5.png","pages/Landing/index.js","components/Footer/index.js","utils/mutations.js","pages/SignupForm/index.js","pages/LoginForm/index.js","utils/queries.js","pages/Dashboard/index.js","components/FlashCard/index.js","pages/SetWrapper/index.js","components/Set/index.js","App.js","serviceWorker.js","index.js"],"names":["Testimonials","CardGroup","text","map","test","i","Card","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","setName","Header","Container","fluid","Navbar","expand","Nav","className","Auth","loggedIn","href","onClick","logout","to","CTA","Row","Col","src","Photo","Footer","LOGIN_USER","gql","ADD_USER","ADD_SET","SignUp","useState","username","email","password","formState","setFormState","useMutation","addUser","error","handleChange","e","console","log","target","name","value","handleFormSubmit","event","a","preventDefault","variables","data","login","onSubmit","placeholder","type","id","onChange","Login","props","QUERY_ME","QUERY_SEED_SET","Dashboard","show","setShow","handleClose","userSets","useQuery","me","sets","setText","addSet","CardDeck","set","md","Body","Button","variant","Modal","onHide","closeButton","Title","Form","FlashCard","icon","faAngleDoubleRight","CardSet","Set","loading","userData","setLoading","setSeeds","seededSets","seeds","_id","client","ApolloClient","request","operation","setContext","headers","authorization","uri","App","path","isLocalhost","process","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cc742a6b.chunk.js","sourcesContent":["import React from 'react';\nimport { Card,  CardGroup, } from 'react-bootstrap';\n\n\n\nexport default function Testimonials () {\n   \n\n    const tests = [\n      {\n        text: \"I've learned things\"\n      },\n      {\n        text: \"Definitley learned things\"\n      },\n      {\n        text: \"Super teach\"\n      },\n      {\n        text: \"Fancy learn time\"\n      },\n\n    ]\n\n    return (\n       <CardGroup>\n         {tests.map((test, i) => (\n        <Card key={i}>\n         <div>\n           {test.text}\n         </div>\n        </Card>\n         ))}\n       </CardGroup>\n    )\n};\n\n","import decode from 'jwt-decode';\n\nclass AuthService {\n    getProfile() {\n        return decode(this.getToken());\n      }\n    \n    loggedIn(){\n        const token = this.getToken();\n        return !!token && !this.isTokenExpired(token);\n    }\n\n    isTokenExpired(token){\n        try{\n            const decoded = decode(token);\n            if(decoded.exp < Date.now()/1000){\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        catch(err) {\n            return false;\n        }\n    }\n\n    getToken(){\n        return localStorage.getItem('id_token');\n    }\n\n    login(idToken){\n        localStorage.setItem('id_token', idToken);\n        window.location.assign('/dashboard');\n    }\n\n    logout() {\n        localStorage.removeItem('id_token');\n        window.location.assign('/');\n    }\n \n    addSet(setName) {\n        localStorage.setItem('setName', setName)\n    }\n}\n\nexport default new AuthService();","import React from 'react';\nimport Auth from '../../utils/auth';\nimport { Link } from 'react-router-dom';\nimport { Container, Nav, Navbar } from 'react-bootstrap';\n\nexport default function Header() {\n    function showNavigation() {\n        if (Auth.loggedIn()) {\n            return (\n                <ul>\n                    <li>\n                        <a href='/' onClick={() => Auth.logout()}>\n                            Logout\n                        </a>\n                    </li>\n                </ul>\n            ) \n        } else {\n            return (\n                <ul>\n                    <li>\n                        <Link to=\"/signup\">\n                            Signup\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/login\">\n                            Login\n                        </Link>\n                    </li>\n                </ul>\n            )\n        }\n    }\n    return(\n        <header>\n        <Container fluid>\n           <Navbar expand=\"lg\">\n               <h1>Dev Learn</h1>\n               <Nav>\n                   <div className=\"nav-wrapper\">\n                   {showNavigation()}\n                   </div>\n               </Nav>\n           </Navbar>\n           </Container>\n        </header>\n    )\n};\n\n{/* <div className=\"flex-wrap\">\n<h1 className=\"h-lg\">Dev Learn</h1>\n<nav>\n{showNavigation()}\n</nav>\n</div> */}","export default __webpack_public_path__ + \"static/media/5.c4b87626.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Testimonials from '../../components/Testimonials';\nimport Header from '../../components/Header';\nimport Photo from '../../assets/images/5.png'\nimport { Col, Row, Container } from 'react-bootstrap'\n\n\nexport default function CTA() {\n    return (\n        <section className=\"landing-container\">\n            <Header />\n            <Container fluid className=\"cta\">\n                <Row className=\"cta-wrapper\">\n                    <Col>\n                        <div className=\"cta-text\">\n                            <p>\n                                The up and coming flashcard app for aspiring web developers.\n                    </p>\n                        </div>\n                        <div className=\"cta-buttons\">\n                            <div className=\"cta-btn\">\n                                <Link to=\"/signup\">Create an Account </Link>\n                            </div>\n                            <div className=\"cta-btn\">\n                                <Link to=\"/login\">Login </Link>\n                            </div>\n                        </div>\n                    </Col>\n                    <Col>\n                        <div className=\"img\">\n                            <img src={Photo}></img>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n            <div className=\"testimonials\">\n                <Testimonials />\n            </div>\n        </section>\n\n    )\n};","import React from 'react';\n\nexport default function Footer() {\n    return(\n        <footer className=\"footer-container\">\n            <div className=\"footer-text\">\n                A JMJM Build \n            </div>\n        </footer>\n    )\n};","import gql from 'graphql-tag';\n\nexport const LOGIN_USER = gql `\n    mutation login($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n            token\n            user {\n                _id\n                username\n            }\n        }\n    }\n`\n\nexport const ADD_USER = gql `\n    mutation addUser($username: String!, $email: String!, $password: String!){\n        addUser(username: $username, email: $email, password: $password){\n            token\n            user {\n                _id\n                username\n            }\n        }\n    }\n`\n\nexport const ADD_SET = gql `\n    mutation addSet($setName: String!){\n        addSet(setName: $setName) {\n            \n                _id\n                setName\n                    cards {\n                    _id\n                    question\n                    answer\n                }\n            \n           \n        }\n    }\n`\n\nexport const ADD_CARD = gql `\n    mutation addCard($setId: ID!, $question: String!, $answer: String!){\n        addCard(setId: $setId, question: $question, answer: $answer){\n            set {\n                _id\n                setName\n                card {\n                    _id\n                    question\n                    answer\n                }\n            }\n        }\n    }\n    `\n\nexport const REMOVE_SET = gql `\n    mutation removeSet($setId: ID!){\n        removeSet(setId: $setId){\n            set {\n                _id\n                setName\n                card {\n                    _id\n                    question \n                    answer\n                }\n            }\n        }\n    }\n`\n\nexport const REMOVE_CARD = gql `\n    mutation removeCard($setId: ID!, $cardId: ID!){\n        removeCard(setId: $setId, cardId: $cardId){\n            set {\n                _id\n                setName \n                card {\n                    _id\n                    question\n                    answer\n                }\n            }\n        }\n    }\n`\n\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from '../../utils/auth';\nimport { ADD_USER } from '../../utils/mutations';\nimport Header from '../../components/Header'\n\n\n\nconst SignUp = () => {\n\n    const [formState, setFormState] = useState({ username: '', email: '', password: '' })\n    //user mutation goes here\n    const [addUser, { error }] = useMutation(ADD_USER);\n\n    const handleChange = e => {\n        console.log(e.target)\n        const { name, value } = e.target;\n\n        setFormState({\n            ...formState,\n            [name]: value\n        })\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            console.log(formState);\n            const { data } = await addUser({\n                variables: { ...formState }\n            });\n            console.log(data);\n            Auth.login(data.addUser.token);\n\n        } catch (err) {\n            console.error(err);\n        }\n\n        setFormState({\n            username: '',\n            email: '',\n            password: '',\n        });\n    };\n\n\n\n    return (\n        <section>\n            <Header />\n            <div className=\"form\">\n                <div className=\"form-container\">\n                    <h2>Sign Up Below</h2>\n                    <form onSubmit={handleFormSubmit}>\n                        <div>\n                            <input\n                                className=\"form-input\"\n                                placeholder=\"Your username\"\n                                name=\"username\"\n                                type=\"username\"\n                                id=\"username\"\n                                onChange={handleChange}\n                            />\n                            <br />\n                            <input\n                                className=\"form-input\"\n                                placeholder=\"Your email\"\n                                name=\"email\"\n                                type=\"email\"\n                                id=\"email\"\n                                onChange={handleChange}\n                            />\n                            <br />\n                            <input\n                                className=\"form-input\"\n                                placeholder=\"******\"\n                                name=\"password\"\n                                type=\"password\"\n                                id=\"password\"\n                                onChange={handleChange}\n                            />\n                            <br />\n                            <button type=\"submit\">Finish Signup</button>\n                        </div>\n                    </form>\n                    {error && <div>Something Went Wrong</div>}\n                </div>\n                </div>\n        </section >\n    )\n\n    // return (\n    //     <section className=\"signup-container\">\n                //         <form>\n                    //             <input name=\"email-input\" className=\"form-input\" placeholder=\"Enter your email here\"></input>\n\n    //             <input name=\"user-input\" className=\"form-input\" placeholder=\"Create a unique username\"></input>\n\n    //             <input name=\"pass-input\" className=\"form-input\" placeholder=\"Create a unique password\"></input>\n\n    //             <button type=\"submit\">Get Learning!</button>\n\n    //         </form>\n    //     </section>  \n    //   )\n};\n\nexport default SignUp;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from '../../utils/auth';\nimport { LOGIN_USER } from '../../utils/mutations';\nimport Header from '../../components/Header';\n\n\nconst Login = props => {\n    const [formState, setFormState] = useState({ email: '', password: '' });\n    const [Login, { error }] = useMutation(LOGIN_USER);\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n\n        //seting form state to value specified in form\n        setFormState({\n            ...formState,\n            [name]: value\n        });\n    };\n\n    const handleFormSubmit = async e => {\n        e.preventDefault();\n\n        try {\n            console.log(formState);\n            const { data } = await Login({\n                variables: { ...formState }\n            });\n            console.log(data.login.token);\n\n            Auth.login(data.login.token);\n        }\n        catch (e) {\n            console.log(e)\n        }\n\n        setFormState({\n            email: '',\n            password: ''\n        })\n    }\n\n\n    return (\n        <section>\n            <Header />\n            <div className=\"form\">\n                <div className=\"form-container\">\n                    <Link to=\"/signup\">Sign-up instead</Link>\n\n                    <h2>Login Below</h2>\n                    <form onSubmit={handleFormSubmit}>\n                        <input\n                            className=\"form-input\"\n                            placeholder=\"Your email\"\n                            name=\"email\"\n                            type=\"email\"\n                            id=\"email\"\n                            value={formState.email}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <input\n                            className=\"form-input\"\n                            placeholder=\"******\"\n                            name=\"password\"\n                            type=\"password\"\n                            id=\"password\"\n                            value={formState.password}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <button type=\"submit\">\n                            Submit\n              </button>\n                    </form>\n                    {error && <div>Something Went Wrong</div>}\n                </div>\n            </div>\n        </section>\n    )\n};\n\nexport default Login;","import gql from 'graphql-tag'\n\nexport const QUERY_ME = gql`\n{\n    me {\n        _id\n        username\n        email\n        sets {\n            _id\n            setName\n            cards {\n                _id\n                question\n                answer\n            }\n        }\n    }\n}\n`\nexport const QUERY_SETSEED = gql`\n    query getSeededSets {\n        set {\n            _id\n            setName\n            cards {\n                _id\n                question\n                answer\n            }\n        }\n    }\n`;\n\n// export const QUERY_CARD = gql`\n//     query getCards {\n//         cards {\n//             _id\n//             question\n//             answer\n//         }\n//     }\n// `;\n\n// export const QUERY_CARDSEED = gql`\n//     query getSeededCards {\n//         cards {\n//             _id\n//             question\n//             answer\n//         }\n//     }\n// `;\n\n// export const QUERY_ALL = gql`\n// {\n//     set {\n//         _id\n//         setName\n//         cards {\n//             _id\n//             question\n//             answer\n//         }\n//     }\n// }\n\n// `\n\nexport const QUERY_SET = gql`\n    query getOneSet($setName: String!) {\n        set(setName: $setName) {\n            _id\n            setName\n            cards {\n                _id\n                question\n                answer\n            }\n        }\n    }\n`;\n\nexport const QUERY_SEED_SET = gql`\n    query getSeededSets {\n        seededSets {\n            _id\n            setName\n            cards {\n                _id\n                question\n                answer\n            }\n        }\n    }\n`;\n","import React, { useState } from 'react'\nimport {Link, Router} from 'react-router-dom';\nimport Header from '../../components/Header';\nimport { Card, Button, Modal, CardDeck, Form } from 'react-bootstrap';\nimport CreateSet from '../../components/AddSet';\nimport {ADD_SET} from '../../utils/mutations';\nimport {QUERY_ME} from '../../utils/queries';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\n\n\n\nexport default function Dashboard() {\n    const [show, setShow] = useState(false);\n\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    // render seeded cards\n\n        let userSets = [];\n    //query stuff\n        const {data} = useQuery(QUERY_ME);\n        console.log(data);\n        if(data){\n            userSets = data.me.sets;\n        };\n        console.log(userSets);\n\n       //mutation stuff\n       const [setName, setText] = useState('');\n       const [addSet, {error}] = useMutation(ADD_SET);\n   \n       const handleChange = e => {\n           const {name, value} = e.target;\n           console.log(setName);\n           setText(e.target.value)\n       \n   };\n       const handleFormSubmit = async event => {\n           event.preventDefault();\n           console.log(setName)\n           \n           try{\n                await addSet({\n                   variables: {setName}\n               });\n               console.log(setName)\n               \n               setText('')\n           }\n           catch(e) {\n               console.log(error)\n           }\n           //function to close\n           handleClose();\n   \n       }\n    return (\n        <div>\n            <Header />\n        <section className=\"dash\">\n\n            <CardDeck className=\"dash-wrap\">\n            {userSets.map(set => {\n                return (\n                    <Card md={2}>\n                <Card.Body>\n                    {/* in the router add id after /flashcards/(idparamter) */}\n                    <Link to='/flashcards'>{set.setName}</Link>\n                </Card.Body>\n            </Card>\n                )})}\n            \n            <Card className=\"create\">\n            <Card.Body>\n                <Button variant=\"primary\" onClick={handleShow}>\n                    Create your own set\n                </Button>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                   <Modal.Title>Modal heading</Modal.Title>\n                 </Modal.Header>\n               <Modal.Body>\n                   <Form >\n                       <h1>Name:</h1>\n                       <textarea\n                        \n                        name=\"set\"\n                        value={setName}\n                        onChange={handleChange}\n                       >\n                       </textarea>\n                       <button type=\"submit\"></button>\n                   </Form>\n                   </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                          </Button>\n                        <Button type=\"submit\" variant=\"primary\" onClick={handleFormSubmit}>\n                            Save Changes\n                      </Button>\n                    </Modal.Footer>\n                </Modal>\n                </Card.Body>\n            </Card>\n           \n               \n            </CardDeck>\n        </section>\n        </div>\n    )\n};","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons'\n\nexport default function FlashCard() {\n\n\n\n    return (\n\n        <div>\n            <Card>\n                <Card.Body>\n                <div className=\"question\">\n                Add an onlick event to flip over card. Card inversed colors when flipped. \n                 </div>\n                 <FontAwesomeIcon icon={faAngleDoubleRight} className=\"fa-3x\"/>\n                 </Card.Body> \n            </Card>\n            <Card>\n                <Card.Body>\n                <div className=\"question\">\n                    This is a question\n                 </div>\n                 <FontAwesomeIcon icon={faAngleDoubleRight} className=\"fa-3x\"/>\n                 </Card.Body> \n            </Card>\n            <Card>\n                <Card.Body>\n                <div className=\"question\">\n                    This is a question\n                 </div>\n                 <FontAwesomeIcon icon={faAngleDoubleRight} className=\"fa-3x\"/>\n                 </Card.Body> \n            </Card>\n            <Card>\n                <Card.Body>\n                <div className=\"question\">\n                    Add an onlick event to flip over card. Card inversed colors when flipped. \n                 </div>\n                 <FontAwesomeIcon icon={faAngleDoubleRight} className=\"fa-3x\"/>\n                 </Card.Body> \n            </Card>\n        </div>\n\n    );\n};","import { React, useState } from 'react';\nimport { CardGroup, Card, Modal, Button, CardDeck } from 'react-bootstrap';\nimport FlashCard from '../../components/FlashCard';\nimport Header from '../../components/Header';\n\n\n\nexport default function CardSet() {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <section className=\"set-wrap\">\n            <Header />\n            <div className=\"set-body\">\n                <h1>HTML</h1>\n                <div className=\"set-modal\"></div>\n                <Button variant=\"primary\" onClick={handleShow}>\n                    Add A Card To Your Set\n                </Button>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Modal heading</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                          </Button>\n                        <Button variant=\"primary\" onClick={handleClose}>\n                            Save Changes\n                      </Button>\n                    </Modal.Footer>\n                </Modal>\n            <div className=\"card-wrap\">\n                <CardGroup>\n                    <FlashCard />\n                </CardGroup>\n            </div>\n            </div>\n        </section >\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { QUERY_ME, QUERY_SEED_SET } from '../../utils/queries';\nimport { useQuery } from '@apollo/react-hooks';\n\nfunction Set() {\n    // functionality to create a card and add cards to set\n    // console.log\n    // if (!sets.length) {\n    //     return <h3>You do not have any sets yet!</h3>\n    // }\n\n    // query user data\n    const { loading , data } = useQuery(QUERY_ME);\n    const userData = data?.me || {};\n    //console.log(userData);\n\n    // query seeded sets\n    const {loading:setLoading, data: setSeeds } = useQuery(QUERY_SEED_SET);\n    console.log(setSeeds);\n\n    if (loading || setLoading) {\n        return <div>Loading...</div>;\n      }\n\n    // add a click handle to bring to cards\n    return (\n        <section>\n            <div className=\"seededSets\">\n                <h1> Test out these decks! </h1>\n                <div>\n                    {setSeeds.seededSets.map(seeds => {\n                        return (\n                            <div key={seeds._id}>\n                                <h1>{seeds.setName}</h1>\n                            </div>\n                        )\n                    })}\n                    \n                </div>\n            </div>\n            {userData.sets? (userData.sets?.map(set => {\n                return (\n                    <div key={set._id}>\n                        <h1>{set.setName}</h1>\n                    </div>\n                )\n            })) : (\n                <p> You have not created a set yet</p>\n            )}\n        </section>\n    )\n}\n\nexport default Set;\n","import React from 'react';\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from 'apollo-boost';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\n//component imports\nimport Landing from './pages/Landing';\nimport Footer from './components/Footer';\n//page imports\nimport Signup from './pages/SignupForm';\nimport Login from './pages/LoginForm';\nimport Dashboard from './pages/Dashboard'\nimport SetWrapper from './pages/SetWrapper';\nimport 'react-multi-carousel/lib/styles.css';\nimport Set from \"./components/Set\"\n\nconst client = new ApolloClient({\n  request: operation => {\n    const token = localStorage.getItem('id_token');\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    });\n  },\n\n  uri: '/graphql'\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Set />\n       <Router>\n        <div>\n        <Switch>\n          <Route path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/flashcards\">\n            <SetWrapper />\n          </Route>\n          <Route path=\"/\">\n            <Landing />\n          </Route>\n        </Switch>\n        </div>\n      </Router>\n      <Footer />\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const swUrl = `${process.env.PUBLIC_URL}/sw.js`\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if ('serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'semantic-ui-css/semantic.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.register();\n"],"sourceRoot":""}